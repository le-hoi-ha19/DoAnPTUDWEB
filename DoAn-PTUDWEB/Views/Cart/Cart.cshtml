@model DoAn_PTUDWEB.Models.Cart
@{
	ViewBag.Title = "Giỏ hàng";
}

<!-- ========================= SECTION CONTENT ========================= -->
<section class="section-content padding-y">
	<div class="container">

		<div class="row">
			<main class="col-md-9">
				<div class="card">

					<table class="table table-borderless table-shopping-cart">
						<thead class="text-muted">
							<tr class="small text-uppercase">
								<th scope="col">Sản phẩm</th>
								<th scope="col" >Phân loại hàng</th>
								<th scope="col">Số lượng</th>
								<th scope="col">Giá tiền</th>
								<th scope="col" class="text-right" width="150"> </th>
							</tr>
						</thead>
						<tbody>
							@if (Model?.Lines.Count > 0)
							{
								@foreach (var line in Model.Lines)
								{
									<tr>
										<td>
											<figure class="itemside">
												<div class="aside"><img src="@line.Product.Thumbnail" class="img-sm"></div>
												<figcaption class="info">
													<a href="#" class="title text-dark" >@line.Product.Name</a>
													<p class="text-muted small"  > Màu sắc: @line.ColorName</p>
												</figcaption>
											</figure>
										</td>
										<td id="ListType" data-id3="@line.TypeId">
											@line.TypeName
										</td>
										<td>
											<div class="form-group col-md flex-grow-0">
												<div class="input-group mb-3 input-spinner">
													<div class="input-group-prepend">

														<a id="btnAddOne" class="btn btn-light"  data-id1="@line.Product.ProductId" > + </a>
													</div>
													<input type="text" class="form-control" value="@line.Quantity">
													<div class="input-group-append">

														<a id="btnMinusOne" class="btn btn-light" data-id2="@line.ColorId"> &minus; </a>
													</div>
												</div>
											</div>
										</td>
										<td class="w-25 ">
											<div class="price-wrap">
												<var class="price">@(line.Product.Price * (1 - line.Product.PriceDiscount))</var>
												<small class="text-muted">đ</small>
											</div>
										</td>
										<td class="text-right">
											<a  id="btnRemoveCartLine" class="btn btn-danger" style="color:white"><i class="fa-solid fa-trash"></i> Xóa</a>
										</td>
									</tr>
								}
							}
							else
							{
								<tr>
									<td colspan="5" class="text-center">
										<img src="./images/empty-cart.png" style="width: 250px;">
									</td>
								</tr>
							}
						</tbody>
					</table>

					<div class="card-body border-top">

						<a style="color:white" class="btn btn-primary float-md-right" id="test" > Mua hàng <i class="fa fa-chevron-right"></i> </a>
						<a href="/" class="btn btn-light"> <i class="fa fa-chevron-left"></i> Tiếp tục mua sắm </a>
					</div>
				</div> <!-- card.// -->


				<div class="alert alert-success mt-3">
					<p class="icontext"><i class="icon text-success fa fa-truck"></i> Miễn phí vận chuyển</p>
				</div>

			</main> <!-- col.// -->
			<aside class="col-md-3">
				
				<div class="card">
					<div class="card-body">
						<dl class="dlist-align">
							<dt>Tổng tiền:</dt>
							@if (Model?.Lines != null)
							{
								<dd class="text-right">@Model.ComputeTotalValue() đ</dd>
							}
							else
							{
								<dd class="text-right">0 đ</dd>

							}
						</dl>
						
						<hr>
						<p class="text-center mb-3">
							<img src="~/images/misc/payments.png" height="26">
						</p>

					</div> <!-- card-body.// -->
				</div>  <!-- card .// -->
			</aside> <!-- col.// -->
		</div>

	</div> <!-- container .//  -->
</section>
<!-- ========================= SECTION CONTENT END// ========================= -->
<!-- ========================= SECTION  ========================= -->
<section class="section-name border-top padding-y">
	<div class="container">
		<h6>Chính sách thanh toán và hoàn tiền</h6>
		<p>
			Chính sách thanh toán và hoàn tiền của chúng tôi được xây dựng với mục tiêu tạo ra trải nghiệm 
			mua sắm thuận lợi và minh bạch cho khách hàng. Chúng tôi chấp nhận nhiều phương thức thanh toán để 
			đảm bảo sự linh hoạt cho người tiêu dùng, bao gồm thanh toán qua thẻ tín dụng, thẻ ghi nợ, 
			chuyển khoản ngân hàng và các dịch vụ thanh toán trực tuyến phổ biến.

			Khi khách hàng quyết định hoàn trả sản phẩm hoặc yêu cầu hoàn tiền, chính sách 
			hoàn tiền của chúng tôi được thiết lập để đảm bảo tính công bằng và minh bạch. Chúng tôi cam kết xử lý 
			các yêu cầu hoàn tiền một cách nhanh chóng và chuyên nghiệp. Trong trường hợp sản phẩm không đáp ứng được mong đợi 
			của khách hàng hoặc có vấn đề chất lượng, chúng tôi sẽ linh hoạt trong việc cung cấp các giải pháp hoàn tiền hoặc đổi trả sản phẩm.
		</p>
	

	</div><!-- container // -->
</section>
<!-- ========================= SECTION  END// ========================= -->
<script>
	// check xem giỏ hàng có đơn hàng không
	var btnBuy = document.getElementById('test');
	btnBuy.addEventListener('click',function(){
		checkOrder = @((Model?.Lines.Count > 0 ).ToString().ToLower());
		console.log('checkOrder:',checkOrder);
		if (!checkOrder) {
			swal.fire({
				text: "Giỏ hàng trống",
				icon: "warning",
				width: 300,
			});
		}else{
			window.location.href ='/Cart/fillform';
		}
	})
	
	// lấy danh sách các nút thêm, bớt, xóa mặt hàng và đơn hàng
	var btnAdd = document.querySelectorAll('#btnAddOne');
	var btnMinus = document.querySelectorAll('#btnMinusOne');
	var btnRemoveCartLine = document.querySelectorAll('#btnRemoveCartLine');
	var ListType = document.querySelectorAll('#ListType');


	// thêm 1 mặt hàng vào 1 đơn hàng
	btnAdd.forEach((addItem, index) => {
		addItem.addEventListener('click', () => {
			var productId = addItem.getAttribute('data-id1');
			var colorId = btnMinus[index].getAttribute('data-id2');
			var typeId = ListType[index].getAttribute('data-id3');
			axios.post('/Cart/AddToCart/', {
				productId: productId,
				quantity: 1,
				ColorId: colorId,
				TypeId: typeId,
			})
				.then(function (response) {
					if (response.status == 200) {
						window.location.reload();
					}
				})

				.catch(function (error) {
					console.error('Có lỗi xảy ra khi gửi yêu cầu:', error);
				});
		});
	});


	// giảm 1 mặt hàng trong 1 đơn hàng
	btnMinus.forEach((item,index) => {
		item.addEventListener('click',()=>{
			var colorId = item.getAttribute('data-id2');
			var productId = btnAdd[index].getAttribute('data-id1');
			var typeId = ListType[index].getAttribute('data-id3');
			axios.post('/Cart/UpdateCart/', {
				productId: productId,
				ColorId: colorId,
				TypeId: typeId,
			})
				.then(function (response) {
					if (response.status == 200) {
						window.location.reload();
					}
				})

				.catch(function (error) {
					console.error('Có lỗi xảy ra khi gửi yêu cầu:', error);
				});
		});
	});

	// xóa 1 đơn hàng
	btnRemoveCartLine.forEach((item,index) => {
		item.addEventListener('click', () => {
			var productId = btnAdd[index].getAttribute('data-id1');
			var colorId = btnMinus[index].getAttribute('data-id2');
			var typeId = ListType[index].getAttribute('data-id3');
			axios.post('/Cart/RemoveFromCart/', {
				productId: productId,
				ColorId: colorId,
				TypeId: typeId,
			})
				.then(function (response) {
					if (response.status == 200) {
						window.location.reload();
					}
				})

				.catch(function (error) {
					console.error('Có lỗi xảy ra khi gửi yêu cầu:', error);
				});
		});
	});


</script>