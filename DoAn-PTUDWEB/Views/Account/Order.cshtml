@{
	ViewBag.Title = "Đơn hàng của tôi";

}

<!-- ========================= SECTION CONTENT ========================= -->
<section class="section-content padding-y">
	<div class="container">
		<div class="row">
			<aside class="col-md-3">
				<nav class="list-group">
					<a class="list-group-item " href="/Account"> Tổng quan về tôi  </a>
					<a class="list-group-item  active" asp-controller="Account" asp-action="Order" asp-route-status="1"> Đơn mua </a>
					<a class="list-group-item" href="/Account/Setting"> Cài đặt </a>
					<a class="list-group-item" href="/Admin/Logout"> Đăng xuất </a>
				</nav>
			</aside> <!-- col.// -->
			<main class="col-md-9">
				<div class="btn-group mb-2" role="group" aria-label="Basic mixed styles example">
					<a id="order-placed-btn" asp-controller="Account" asp-action="Order" asp-route-status="1" class="btn rounded mx-2 btn-outline-primary">Đã đặt hàng</a>
					<a id="shipping-btn" asp-controller="Account" asp-action="Order" asp-route-status="2" class="btn rounded mx-2 btn-outline-info">Đang giao</a>
					<a id="completed-btn" asp-controller="Account" asp-action="Order" asp-route-status="3" class="btn rounded mx-2 btn-outline-success">Hoàn thành</a>
					<a id="cancelled-btn" asp-controller="Account" asp-action="Order" asp-route-status="4" class="btn rounded mx-2 btn-outline-danger">Đã hủy</a>
				</div>


				@if (ViewBag.orders != null && ViewBag.orders.Count > 0)
				{
					@foreach (var item in ViewBag.orders)
					{
						decimal sum = 0;
						<article class="card mb-4">
							<header class="card-header">
								@if(item.Status == 1)
								{
									<a id="btnCancel" data-orderId="@item.OrderId" class="btn btn-danger rounded  float-right text-white ">
										<i class="fa-solid fa-trash"></i>
										Hủy đơn hàng
									</a>
								}
								else if (item.Status == 2)
								{
									<a id="btnConfirmOrder" data-orderId="@item.OrderId" class="btn btn-danger rounded  float-right text-white ">
										<i class="fa-solid fa-check"></i>
										đã nhận được hàng
									</a>
								}

								<strong class="d-inline-block mr-3">Mã đơn hàng: @item.OrderId</strong>
								<span>Ngày đặt hàng: @item.OrderDate.ToString("dd/MM/yyyy")</span>

							</header>
							<div class="card-body">
								<div class="row">
									<div class="col-md-8">
										<h6 class="text-muted">Giao đến:</h6>
										<p>
											@item.CustomerName <br>
											Điện thoại +@item.Phone Email: @item.Email <br>
											Vị trí: @item.ShipAddress <br>
										</p>
									</div>
									<div class="col-md-4">
										<h6 class="text-muted">Thanh toán</h6>
										<span class="text-success">
											<i class="fab fa-lg fa-cc-visa"></i>
											Visa  **** 4216
										</span>
										@foreach (var money in @item.Details)
										{
											sum += money.TotalMoney;
										}

										<p>

											<span class="b">Tổng tiền: @sum.ToString("N0")₫ </span>
										</p>

									</div>
								</div> <!-- row.// -->
							</div> <!-- card-body .// -->
							<div class="table-responsive">
								<table class="table table-hover">
									<tbody>
										@foreach (var orderItem in @item.Details)
										{
											<tr>
												<td width="65">
													<img src="@orderItem.ProductImage" class="img-xs border">
												</td>
												<td>
													<p class="title mb-0">@orderItem.Name </p>
													<var class="price text-muted"> @orderItem.Price.ToString("N0")₫</var>
												</td>
												<td>Loại sản phẩm: @orderItem.ProductType <br>Màu: @orderItem.ProductColor <br>Số lượng: @orderItem.Quantity   </td>

											</tr>
										}

									</tbody>
								</table>
							</div> <!-- table-responsive .end// -->
						</article> <!-- card order-item .// -->
					}
				}else
					{
						<p class="text-center mt-2">Chưa có đơn hàng nào!</p>
					}

				

			</main>
		</div>

	</div> <!-- container .//  -->
</section>
<!-- ========================= SECTION CONTENT END// ========================= -->

<script>
	var btnCancels = document.querySelectorAll("#btnCancel");

	btnCancels.forEach((item,index)=>{
		item.addEventListener('click', () => {
			axios.patch('/Admin/Order/Change/Status/', {
				OrderId: item.getAttribute('data-orderId'),
				status: 4
			})
				.then(function (response) {
					if (response.status == 200) {
						Swal.fire({
							position: "center",
							icon: "success",
							title: "Hủy đơn hàng thành công",
							showConfirmButton: false,
							timer: 1500
						});
						setTimeout(function () {
							location.reload();
						}, 2000);
					}
				})
				.catch(function (error) {
					console.error('Có lỗi xảy ra khi gửi yêu cầu:', error);
				});
		})
	})


	// xác nhận nhận được hàng
	var btnConfirmOrders = document.querySelectorAll("#btnConfirmOrder");

	btnConfirmOrders.forEach((item, index) => {
		item.addEventListener('click', () => {
			Swal.fire({
				title: "Bạn chắc đã nhận được hàng rồi chứ?",
				icon: "warning",
				showCancelButton: true,
				confirmButtonColor: "#3085d6",
				cancelButtonColor: "#d33",
				cancelButtonText: "Chưa, để tui xem lại",
				confirmButtonText: "Vâng"
			}).then((result) => {
				if (result.isConfirmed) {
					axios.patch('/Admin/Order/Change/Status/', {
						OrderId: item.getAttribute('data-orderId'),
						status: 3
					})
						.then(function (response) {
							if (response.status == 200) {
								Swal.fire({
									position: "center",
									icon: "success",
									title: "Xác nhận thành công",
									showConfirmButton: false,
									timer: 1500
								});
								setTimeout(function () {
									location.reload();
								}, 2000);
							}
						})
						.catch(function (error) {
							console.error('Có lỗi xảy ra khi gửi yêu cầu:', error);
						});
				}
			});


			
		})
	})
	


	// xử sự kiện focus vào nút

	document.addEventListener('DOMContentLoaded', function () {
		// Kiểm tra xem đã có id của nút được focus được lưu trong sessionStorage chưa
		var focusedButtonId = sessionStorage.getItem('focusedButtonId');

		// Nếu có, thiết lập focus cho nút tương ứng
		if (focusedButtonId) {
			var focusedButton = document.getElementById(focusedButtonId);
			if (focusedButton) {
				focusedButton.focus();
			}
		} else {
			// Nếu không, thiết lập nút đã đặt hàng là mặc định và lưu trữ id của nút đó vào sessionStorage
			var defaultButton = document.getElementById('order-placed-btn');
			defaultButton.focus();
			sessionStorage.setItem('focusedButtonId', 'order-placed-btn');
		}

		// Xử lý sự kiện click trên các nút
		var buttons = document.querySelectorAll('.btn-group .btn');
		buttons.forEach(function (button) {
			button.addEventListener('click', function () {
				// Loại bỏ class focus từ tất cả các nút
				buttons.forEach(function (btn) {
					btn.classList.remove('focus');
				});
				// Thêm class focus vào nút được click
				this.classList.add('focus');
				// Lưu id của nút được focus vào sessionStorage
				sessionStorage.setItem('focusedButtonId', this.id);
			});
		});
	});



</script>

